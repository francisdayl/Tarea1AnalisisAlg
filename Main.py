# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from numpy import array
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import funciones as fc

class Worker(QtCore.QObject):
    finished = QtCore.pyqtSignal(list)
    progress = QtCore.pyqtSignal()

    def run(self,valor):
        self.progress.emit()
        x_iter, y_iter = fc.time_iterative(valor)
        x_rec, y_rec = fc.time_recursive(valor)
        self.finished.emit([x_iter, y_iter,x_rec, y_rec])

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 500)
        MainWindow.setMinimumSize(QtCore.QSize(600, 500))
        MainWindow.setMaximumSize(QtCore.QSize(1000, 850))
        MainWindow.setStyleSheet("background-color:rgb(28, 43, 52) ;\n"
"color: white;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.HBox_TOP = QtWidgets.QHBoxLayout()
        self.HBox_TOP.setObjectName("HBox_TOP")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.HBox_TOP.addItem(spacerItem)
        self.Label_Selec = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Label_Selec.setFont(font)
        self.Label_Selec.setObjectName("Label_Selec")
        self.HBox_TOP.addWidget(self.Label_Selec)
        self.Combo = QtWidgets.QComboBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.Combo.setFont(font)
        self.Combo.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Combo.setStyleSheet("background-color: white;\n"
"color: black;")
        self.Combo.addItems(["1","2","5","8","10","12","15","20","25","30","35","40"])
        self.HBox_TOP.addWidget(self.Combo)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.HBox_TOP.addItem(spacerItem1)
        self.gridLayout.addLayout(self.HBox_TOP, 0, 0, 1, 1)


        self.HBox_Med = QtWidgets.QHBoxLayout()
        self.HBox_Med.setObjectName("HBox_Med")
        self.Label_GraphRec = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.Label_GraphRec.setFont(font)
        self.Label_GraphRec.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_GraphRec.setObjectName("Label_GraphRec")
        self.HBox_Med.addWidget(self.Label_GraphRec)
        self.gridLayout.addLayout(self.HBox_Med, 1, 0, 1, 1)


        self.HBox_Bot = QtWidgets.QHBoxLayout()
        self.HBox_Bot.setObjectName("HBox_Bot")
        self.Frame_Rec = QtWidgets.QFrame(self.centralwidget)
        self.Frame_Rec.setStyleSheet("background-color:rgb(214, 214, 214) ;")
        self.Frame_Rec.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.Frame_Rec.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Frame_Rec.setObjectName("Frame_Rec")
        self.HBox_Bot.addWidget(self.Frame_Rec)
        self.gridLayout.addLayout(self.HBox_Bot, 2, 0, 1, 1)

        


        self.HBox_Last = QtWidgets.QHBoxLayout()
        self.HBox_Last.setObjectName("HBox_Last")
        self.Label_Rec = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setWeight(75)
        self.Label_Rec.setFont(font)
        self.Label_Rec.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_Rec.setObjectName("Label_Rec")
        #self.Label_Rec.setText("a")
        self.HBox_Last.addWidget(self.Label_Rec)

        self.Label_Iter = QtWidgets.QLabel(self.centralwidget)
        self.Label_Iter.setFont(font)
        self.Label_Iter.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_Iter.setObjectName("Label_Iter")
        #self.Label_Iter.setText("a")
        #self.HBox_Last.addWidget(self.Label_Iter)
        self.gridLayout.addWidget(self.Label_Rec, 3, 0, 1, 1)


        self.gridLayout.addWidget(self.Label_Iter, 4, 0, 1, 1)

        self.gridLayout.setRowStretch(0,1)
        self.gridLayout.setRowStretch(1,1)
        self.gridLayout.setRowStretch(2,4)
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.Combo.activated.connect(self.graficar)     


    
    def runLongTask(self,valor):
        self.thread = QtCore.QThread()
        self.worker = Worker()
        self.worker.moveToThread(self.thread)
        self.thread.started.connect(lambda: self.worker.run(valor))
        self.worker.finished.connect(self.show_fin)
        self.worker.finished.connect(self.thread.quit)
        self.worker.finished.connect(self.worker.deleteLater)
        self.thread.finished.connect(self.thread.deleteLater)
        self.thread.start()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tarea - Recursividad vs Iteratividad"))
        self.Label_Selec.setText(_translate("MainWindow", "Seleccione un número"))
        self.Label_GraphRec.setText(_translate("MainWindow", "Gráfico de Recursividad (Azul) vs Iteratividad (Naranja)"))
        #self.Label_GraphIter.setText(_translate("MainWindow", "Gráfico de Iteratividad"))


    def show_fin(self,datos):
        self.clear_HBoxBot()
        x_iter, y_iter,x_rec, y_rec = datos
        fig, ax = plt.subplots(figsize=(1, 1), dpi=70)
        ax.plot(x_rec, y_rec)
        ax.plot(x_iter, y_iter)
        ax.set(xlabel='Número (n)', ylabel='Tiempo (s)')
        ax.grid()
        self.HBox_Bot.addWidget(FigureCanvas(fig))
        self.Label_Rec.setText("Tiempo en (s) Recursividad: "+"|".join(array(y_rec,dtype=str).tolist()))
        self.Label_Iter.setText("Tiempo en (s) Iteratividad: "+"|".join(array(y_iter,dtype=str).tolist()))
        

    def graficar(self):
        self.clear_HBoxBot()
        valor = int(self.Combo.currentText())
        self.Label_Carga = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(46)
        font.setBold(True)
        font.setWeight(75)
        self.Label_Carga.setFont(font)
        self.Label_Carga.setAlignment(QtCore.Qt.AlignCenter)
        self.Label_Carga.setObjectName("Label_Carga")
        self.Label_Carga.setText("CARGANDO...")
        self.HBox_Bot.addWidget(self.Label_Carga)
        self.runLongTask(valor)
        
        pass

    def clear_HBoxBot(self):
        while self.HBox_Bot.count():
            child = self.HBox_Bot.takeAt(0)                        
            if child.widget():
                    child.widget().deleteLater()
        return None
    
        

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
